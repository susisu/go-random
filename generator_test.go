package random

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"pgregory.net/rapid"
)

type mockSource64 struct {
	seq []uint64
	i   int
}

func (s *mockSource64) Int63() int64 {
	panic("not implemented")
}

func (s *mockSource64) Seed(seed int64) {
	panic("not implemented")
}

func (s *mockSource64) Uint64() uint64 {
	n := s.i
	s.i += 1
	return s.seq[n]
}

func TestFromSource64(t *testing.T) {
	rapid.Check(t, func(t *rapid.T) {
		seq := rapid.SliceOfN(rapid.Uint64(), 1, 5).Draw(t, "seq")
		g := FromSource64(&mockSource64{seq: seq})
		for _, expected := range seq {
			actual := g.Next()
			assert.Equal(t, expected, actual, "equal to the value generated by the source")
		}
	})
}
